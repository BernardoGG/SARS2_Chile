Meta_Mu_ISP_filt <- Meta_Mu_ISP %>% filter(Meta_Mu_ISP$`Accession ID` %in% phylo_mu_isp_id$`Accession ID`)
# Export tsv files with metadata
write.table(Meta_Alpha_GISAID, file = "Data/SC2_CL_Alpha_GISAID_aln.fasta/SARS2_CL_Alpha_GISAID.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Gamma_GISAID, file = "Data/SC2_CL_Gamma_GISAID_aln/SARS2_CL_Gamma_GISAID.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Gamma_GISAID, file = "Data/SC2_CL_Gamma_GISAID_aln.fasta/SARS2_CL_Gamma_GISAID.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Gamma_ISP, file = "Data/SC2_CL_Gamma_ISP_aln.fasta/SARS2_CL_Gamma_ISP.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Lambda_GISAID, file = "Data/SC2_CL_Lambda_GISAID_aln.fasta/SARS2_CL_Lambda_GISAID.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Lambda_ISP, file = "Data/SC2_CL_Lambda_ISP_aln.fasta/SARS2_CL_Lambda_ISP.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Mu_GISAID, file = "Data/SC2_CL_Mu_GISAID_aln.fasta/SARS2_CL_Mu_GISAID.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Mu_ISP, file = "Data/SC2_CL_Mu_ISP_aln.fasta/SARS2_CL_Mu_ISP.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
# Export tsv files with collection dates exclusively
write.table(Meta_Alpha_GISAID[,c(1,6)], file = "Data/SC2_CL_Alpha_GISAID_aln.fasta/SARS2_CL_Alpha_GISAID_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
write.table(Meta_Lambda_GISAID[,c(1,6)], file = "Data/SC2_CL_Lambda_GISAID_aln.fasta/SARS2_CL_Lambda_GISAID_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
write.table(Meta_Lambda_ISP[,c(1,6)], file = "Data/SC2_CL_Lambda_ISP_aln.fasta/SARS2_CL_Lambda_ISP_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
write.table(Meta_Mu_GISAID[,c(1,6)], file = "Data/SC2_CL_Mu_GISAID_aln.fasta/SARS2_CL_Mu_GISAID_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
write.table(Meta_Mu_ISP[,c(1,6)], file = "Data/SC2_CL_Mu_ISP_aln.fasta/SARS2_CL_Mu_ISP_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
View(phylo_alpha_gisaid_id)
phylo_alpha_gisaid$tip.label
# Import alignments
Alpha_GISAID_fasta <- read.fasta("Data/SC2_Alpha_GISAID_aln/SARS2_CL_Alpha_GISAID_2022_08_09_18.fasta")
library(readxl) # to read xlsx file with specific sheet
library(stringi) # to remove accents from strings
library(viridis) # for nice ggplot colors
library(wesanderson) # ggplot color help
library(tidyverse)
library(safejoin)
library(data.table)
library(dplyr)
library(zoo)
library(countrycode)
library(purrr)
library(readr)
library(stringr)
library(tidyr)
library(usdata)
library(seqinr)
library(ggplot2)
library(ape)
library(patchwork)
# Import alignments
Alpha_GISAID_fasta <- read.fasta("Data/SC2_Alpha_GISAID_aln/SARS2_CL_Alpha_GISAID_2022_08_09_18.fasta")
getwd()
# Import alignments
Alpha_GISAID_fasta <- read.fasta("Data/SC2_Alpha_GISAID_aln.fasta/SARS2_CL_Alpha_GISAID_2022_08_09_18.fasta")
# Import alignments
Alpha_GISAID_fasta <- read.fasta("Data/SC2_CL_Alpha_GISAID_aln.fasta/SARS2_CL_Alpha_GISAID_2022_08_09_18.fasta")
names(Alpha_GISAID_fasta)
Alpha_GISAID_fasta %>% filter(names(Alpha_GISAID_fasta) %in% phylo_alpha_gisaid_id$`Accession ID`)
library(readxl) # to read xlsx file with specific sheet
library(stringi) # to remove accents from strings
library(viridis) # for nice ggplot colors
library(wesanderson) # ggplot color help
library(tidyverse)
library(safejoin)
library(data.table)
library(dplyr)
library(zoo)
library(countrycode)
library(purrr)
library(readr)
library(stringr)
library(tidyr)
library(usdata)
library(seqinr)
library(ggplot2)
library(ape)
library(patchwork)
phylo_gamma_gisaid <-
read.nexus("Phylogenetics/Gamma/TempEst_SARS2_CL_Gamma_GISAID_2022_08_09_18_v2_noroot.tree")
phylo_gamma_isp <-
read.nexus("Phylogenetics/Gamma/TempEst_SARS2_CL_Gamma_ISP_2022_08_09_18_v2_heur.tree")
phylo_gamma_gisaid_id <- phylo_gamma_gisaid$tip.label %>% str_split_fixed(pattern = fixed("|"), 3) %>%
as.data.frame() %>% select(V2) %>% rename(`Accession ID` = V2)
phylo_gamma_isp_id <- phylo_gamma_isp$tip.label %>% str_split_fixed(pattern = fixed("|"), 3) %>%
as.data.frame() %>% select(V2) %>% rename(`Accession ID` = V2)
Meta_Gamma_GISAID_filt <- Meta_Gamma_GISAID %>% filter(Meta_Gamma_GISAID$`Accession ID` %in% phylo_gamma_gisaid_id$`Accession ID`)
Meta_Gamma_ISP_filt <- Meta_Gamma_ISP %>% filter(Meta_Gamma_ISP$`Accession ID` %in% phylo_gamma_isp_id$`Accession ID`)
write.table(Meta_Gamma_GISAID_filt, file = "Data/SC2_CL_Gamma_GISAID_aln.fasta/SARS2_CL_Gamma_GISAID.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Gamma_ISP_filt, file = "Data/SC2_CL_Gamma_ISP_aln.fasta/SARS2_CL_Gamma_ISP.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Gamma_GISAID_filt[,c(1,6)], file = "Data/SC2_CL_Gamma_GISAID_aln/SARS2_CL_Gamma_GISAID_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
write.table(Meta_Gamma_ISP_filt[,c(1,6)], file = "Data/SC2_CL_Gamma_ISP_aln/SARS2_CL_Gamma_ISP_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
write.table(Meta_Gamma_GISAID_filt[,c(1,6)], file = "Data/SC2_CL_Gamma_GISAID_aln.fasta/SARS2_CL_Gamma_GISAID_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
write.table(Meta_Gamma_ISP_filt[,c(1,6)], file = "Data/SC2_CL_Gamma_ISP_aln.fasta/SARS2_CL_Gamma_ISP_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
phylo_delta_isp <-
read.nexus("Phylogenetics/Delta/TempEst_SARS2_CL_Delta_ISP_2022_08_09_17_v2_heur.tree")
phylo_delta_gisaid <-
read.nexus("Phylogenetics/Delta/TempEst_SARS2_CL_Delta_GISAID_v2_subtree1_heur.tree")
phylo_delta_gisaid_id <- phylo_delta_gisaid$tip.label %>% str_split_fixed(pattern = fixed("|"), 3) %>%
as.data.frame() %>% select(V2) %>% rename(`Accession ID` = V2)
phylo_delta_isp_id <- phylo_delta_isp$tip.label %>% str_split_fixed(pattern = fixed("|"), 3) %>%
as.data.frame() %>% select(V2) %>% rename(`Accession ID` = V2)
Meta_Delta_GISAID_filt <- Meta_Delta_GISAID %>% filter(Meta_Delta_GISAID$`Accession ID` %in% phylo_delta_gisaid_id$`Accession ID`)
Meta_Delta_ISP_filt <- Meta_Delta_ISP %>% filter(Meta_Delta_ISP$`Accession ID` %in% phylo_delta_isp_id$`Accession ID`)
write.table(Meta_Delta_GISAID_filt, file = "Data/SC2_CL_Delta_GISAID_aln/SARS2_CL_Delta_GISAID.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Delta_ISP_filt, file = "Data/SC2_CL_Delta_ISP_aln/SARS2_CL_Delta_ISP.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Delta_ISP_filt, file = "Data/SC2_CL_Delta_ISP_aln.fasta/SARS2_CL_Delta_ISP.tsv",
row.names = FALSE, sep = "\t", quote = FALSE)
write.table(Meta_Delta_GISAID_filt[,c(1,6)], file = "Data/SC2_CL_Delta_GISAID_aln/SARS2_CL_Delta_GISAID_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
write.table(Meta_Delta_ISP_filt[,c(1,6)], file = "Data/SC2_CL_Delta_ISP_aln.fasta/SARS2_CL_Delta_ISP_dates.tsv",
row.names = FALSE, col.names = c("id", "date"), sep = "\t", quote = FALSE)
save.image("~/Documents/SARS2_Chile_local/SARS2_Chile/SC2_CL_20220909session.RData")
150000000/1000
(150000000/1000)*0.1
150000000 - (150000000/1000)*0.1
(150000000 - (150000000 / 1000) * 0.1) / 10000
(150000000 - (150000000 / 1000) * 0.1) / 7500
install.packages('coda')
library(coda)
library(ggplot2)
library(ggplot2)
max(Alpha_ISP$Date)
date_decimal(max(Alpha_ISP$Date))
library(readxl) # to read xlsx file with specific sheet
library(stringi) # to remove accents from strings
library(viridis) # for nice ggplot colors
library(wesanderson) # ggplot color help
library(tidyverse)
library(safejoin)
library(data.table)
library(dplyr)
library(zoo)
library(countrycode)
library(purrr)
library(readr)
library(stringr)
library(tidyr)
library(usdata)
library(seqinr)
library(ggplot2)
library(ape)
library(patchwork)
date(max(Alpha_ISP$Date))
decimal(max(Alpha_ISP$Date))
library(lubridate)
decimal_date(max(Alpha_ISP$Date))
decimal_date(max(Lambda_ISP$Date))
decimal_date(max(Mu_ISP$Date))
737.2649/12
date_decimal(2020.8)
decimal_date(2021-01-01)
decimal_date("2021-01-01")
decimal_date(as.Date("2021-01-01"))
61.43874*2
701.812/12
713.2105/12
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log", sep = "\t") %>%
mcmc()
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log", sep = "\t")
View(alpha_dta)
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t",
col.names = TRUE)
library(janitor)
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t",
col.names = TRUE) %>%
row_to_names(row_number = 1)
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mcmc()
View(alpha_dta)
is.numeric(alpha_dta$state)
is.numeric(alpha_dta$surveillance.rates.Airport.background_sequences)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
as.numeric()
rep("numeric", ncol(alpha_dta)
)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t", cplClasses = rep("numeric", ncol(alpha_dta))) %>%
row_to_names(row_number = 1) %>%
as.numeric()
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t", colClasses = rep("numeric", ncol(alpha_dta))) %>%
row_to_names(row_number = 1) %>%
as.numeric()
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t", colClasses = rep(Numeric, ncol(alpha_dta))) %>%
row_to_names(row_number = 1) %>%
as.numeric()
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t", colClasses = rep('Numeric', ncol(alpha_dta))) %>%
row_to_names(row_number = 1)
is.character(alpha_dta$state)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t", colClasses = rep('Numeric', ncol(alpha_dta))) %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric)
is.character(alpha_dta$state)
is.numeric(alpha_dta$state)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
mcmc()
plot.mcmc(alpha_dta)
library(coda)
densplot(alpha_dta)
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`) %>%
mcmc()
install.packages('ggmcmc')
install.packages('ggmcmc')
library(ggmcmc)
library(ggmcmc)
ggmcmc(alpha_dta, plot = "density")
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`) %>%
mcmc()
library(coda)
library(ggplot2)
library(janitor)
library(ggmcmc)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`) %>%
mcmc()
ggmcmc(alpha_dta, plot = "density")
ggs_density(alpha_dta, plot = "density")
ggs_density(alpha_dta)
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`)
ggs_density(alpha_dta)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`) %>%
mcmc() %>%
ggs()
ggs_density(alpha_dta)
ggs_density(alpha_dta, hpd = TRUE)
View(alpha_dta)
#### Plot posterior density of parameters of interest
ggs_density(alpha_dta, hpd = TRUE) %>% theme_minimal()
#### Plot posterior density of parameters of interest
ggs_density(alpha_dta, hpd = TRUE) %>% theme_minimal()
#### Plot posterior density of parameters of interest
ggs_density(alpha_dta) %>% theme_minimal()
#### Plot posterior density of parameters of interest
ggs_density(alpha_dta, hpd = TRUE) %>% theme_light()
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`) %>%
mcmc() %>% ggs() %>% select(-Chain)
########################### Renaming function ##################################
unique(alpha_dta$Parameter)
alpha_dta %>% mutate(Parameter = replace(Parameter,
Parameter == 'c_airport_background.count[1]',
'Background to Airport'))
alpha_dta %>% mutate(Parameter = replace(Parameter,
Parameter == "c_airport_background.count[1]",
"Background to Airport"))
alpha_dta %>% mutate(Parameter = replace(Parameter,
"c_airport_background.count[1]",
"Background to Airport"))
replace(alpha_dta$Parameter, "c_airport_background.count[1]", "Background to Airport")
mutate(alpha_dta, Parameter == "c_airport_background.count[1]", "Background to Airport")
decimal_date(max(Gamma_ISP$Date))
library(readxl) # to read xlsx file with specific sheet
library(stringi) # to remove accents from strings
library(viridis) # for nice ggplot colors
library(wesanderson) # ggplot color help
library(tidyverse)
library(safejoin)
library(data.table)
library(dplyr)
library(zoo)
library(countrycode)
library(purrr)
library(readr)
library(stringr)
library(tidyr)
library(usdata)
library(seqinr)
library(ggplot2)
library(ape)
library(patchwork)
decimal_date(max(Gamma_ISP$Date))
library(lubridate)
decimal_date(max(Gamma_ISP$Date))
661.4668 /12
########################### Renaming function ##################################
param_names <- c('c_airport_background.count[1]', 'c_airport_community.count[1]', 'c_background_airport.count[1]',
'c_background_community.count[1]', 'c_community_airport.count[1]', 'c_community_background.count[1]')
count_names <- c('Background to Airport', 'Community to Airport', 'Airport to Background',
'Community to Background', 'Airport to Community', 'Background to Community')
count_descr <- c('Imports to airport', 'Community/Airport', 'Airport/Background',
'Exports', 'Imports through airport to community', 'Imports directly to community')
replace(alpha_dta$Parameter, param_names, count_names)
is.factor(alpha_dta$Parameter)
replace(as.character(alpha_dta$Parameter), param_names, count_names)
x<-replace(as.character(alpha_dta$Parameter), param_names, count_names)
summary(x)
table(x)
alpha_dta %>% mutate(Parameter = recode('c_airport_background.count[1]' = 'Background to Airport',
'c_airport_community.count[1]' = 'Community to Airport',
'c_background_airport.count[1]' = 'Airport to Background',
'c_background_community.count[1]' = 'Community to Background',
'c_community_airport.count[1]' = 'Airport to Community',
'c_community_background.count[1]' = 'Background to Community'))
alpha_dta
alpha_dta %>% mutate(Parameter = recode_factor('c_airport_background.count[1]' = 'Background to Airport',
'c_airport_community.count[1]' = 'Community to Airport',
'c_background_airport.count[1]' = 'Airport to Background',
'c_background_community.count[1]' = 'Community to Background',
'c_community_airport.count[1]' = 'Airport to Community',
'c_community_background.count[1]' = 'Background to Community'))
as.data.frame(alpha_dta) %>% mutate(Parameter = recode('c_airport_background.count[1]' = 'Background to Airport',
'c_airport_community.count[1]' = 'Community to Airport',
'c_background_airport.count[1]' = 'Airport to Background',
'c_background_community.count[1]' = 'Community to Background',
'c_community_airport.count[1]' = 'Airport to Community',
'c_community_background.count[1]' = 'Background to Community'))
alpha_dta %>%
mutate(Parameter = case_when('c_airport_background.count[1]' == 'Background to Airport',
'c_airport_community.count[1]' == 'Community to Airport',
'c_background_airport.count[1]' == 'Airport to Background',
'c_background_community.count[1]' == 'Community to Background',
'c_community_airport.count[1]' == 'Airport to Community',
'c_community_background.count[1]' == 'Background to Community'))
alpha_dta %>%
mutate(Count = case_when(Parameter == 'c_airport_background.count[1]' ~ 'Background to Airport',
Parameter == 'c_airport_community.count[1]' ~ 'Community to Airport',
Parameter == 'c_background_airport.count[1]' ~ 'Airport to Background',
Parameter == 'c_background_community.count[1]' ~ 'Community to Background',
Parameter == 'c_community_airport.count[1]' ~ 'Airport to Community',
Parameter == 'c_community_background.count[1]' ~ 'Background to Community'))
rm(count_descr)
rm(count_names)
rm(param_names)
rm(param_names)
########################### Renaming function ##################################
transitions.renaming <- function(X) {X %>%
mutate(Count = case_when(Parameter == 'c_airport_background.count[1]' ~ 'Background to Airport',
Parameter == 'c_airport_community.count[1]' ~ 'Community to Airport',
Parameter == 'c_background_airport.count[1]' ~ 'Airport to Background',
Parameter == 'c_background_community.count[1]' ~ 'Community to Background',
Parameter == 'c_community_airport.count[1]' ~ 'Airport to Community',
Parameter == 'c_community_background.count[1]' ~ 'Background to Community')) %>%
mutate(Description = case_when(Parameter == 'c_airport_background.count[1]' ~ 'Imports to airport',
Parameter == 'c_airport_community.count[1]' ~ 'Community/Airport',
Parameter == 'c_background_airport.count[1]' ~ 'Airport/Background',
Parameter == 'c_background_community.count[1]' ~ 'Exports',
Parameter == 'c_community_airport.count[1]' ~ 'Imports through airport to community',
Parameter == 'c_community_background.count[1]' ~ 'Imports directly to community'))
}
transitions.renaming(alpha_dta)
#### Importing data
# Import BEAST DTA log files
alpha_dta <-
read.table("Phylogenetics/DTA_Alpha_ISP/DTA_SARS2_CL_Alpha_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`) %>%
mcmc() %>% ggs() %>% select(-Chain) %>% transitions.renaming()
View(alpha_dta)
#### Plot posterior density of parameters of interest
ggplot(alpha_dta, aes(x = Iteration, y = value, group = Parameter)) + geom_violin()
gamma_dta <-
read.table("Phylogenetics/DTA_Gamma_ISP/DTA_SARS2_CL_Gamma_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`) %>%
mcmc() %>% ggs() %>% select(-Chain) %>% transitions.renaming()
lambda_dta <-
read.table("Phylogenetics/DTA_Lambda_ISP/DTA_SARS2_CL_Lambda_ISP.log",
sep = "\t") %>%
row_to_names(row_number = 1) %>%
mutate_if(is.character,as.numeric) %>%
select(`c_airport_community.count[1]`, `c_airport_background.count[1]`,
`c_background_community.count[1]`, `c_background_airport.count[1]`,
`c_community_airport.count[1]`, `c_community_background.count[1]`) %>%
mcmc() %>% ggs() %>% select(-Chain) %>% transitions.renaming()
ggplot(lambda_dta, aes(x = Iteration, y = value, group = Parameter)) + geom_violin()
ggplot(lambda_dta, aes(x = Iteration, y = value, color = Parameter)) + geom_violin()
ggplot(lambda_dta, aes(x = Iteration, y = value, color = Description)) + geom_violin()
ggs_density(lambda_dta)
716.535 / 12
195.7746 / 12
#library(ggmcmc)
install.packages("NatParksPalettes")
#library(ggmcmc)
library(NatParksPalettes)
NatParksPalettes$Banff
